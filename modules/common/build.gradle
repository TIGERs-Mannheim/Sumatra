/*
 * Copyright (c) 2009 - 2021, DHBW Mannheim - TIGERs Mannheim
 */

plugins {
    id 'sumatra.java'
    id 'sumatra.test'
    id 'sumatra.test.spock'
    id 'java-library'
}

dependencies {
    api project(':common-math')

    implementation(libs.com.github.TIGERs.mannheim.matlabcontrol)

    implementation(libs.commons.lang)
    implementation(libs.commons.configuration)
    implementation(libs.org.apache.commons.commons.math3)
    runtimeOnly(libs.commons.collections)

    implementation(libs.org.apache.logging.log4j.log4j.api)
    implementation(libs.org.apache.logging.log4j.log4j.core)
    annotationProcessor(libs.org.apache.logging.log4j.log4j.core)

    implementation(libs.gov.nist.math.jama)
    implementation(libs.net.jafama)
    implementation(libs.com.github.cliftonlabs.json.simple)
    implementation(libs.org.jgraph.jgraph.core)

    testImplementation(libs.org.assertj.assertj.core)

    testImplementation(libs.org.hamcrest)
    testImplementation(libs.org.assertj.assertj.core)
    testImplementation(libs.org.openjdk.jmh.jmh.core)
    testRuntimeOnly(libs.commons.collections)
    testAnnotationProcessor(libs.org.openjdk.jmh.jmh.generator.annprocess)
}

tasks.register("runBangBangTrajectoryBenchmark", JavaExec) {
    group = "Execution"
    description = "Run BangBangTrajectoryBenchmark"
    classpath = sourceSets.test.runtimeClasspath
    mainClass.set("edu.tigers.sumatra.trajectory.BangBangTrajectoryBenchmark")
}
