/*
 * Copyright (c) 2009 - 2021, DHBW Mannheim - TIGERs Mannheim
 */

plugins {
    id 'sumatra.java'
}

testing {
    suites {
        test {
            useJUnitJupiter()
        }

        integrationTest(JvmTestSuite) {
            dependencies {
                implementation project(':common')
                implementation project(':common-math')
                implementation project(':common-bot')
                implementation project(':sumatra-simulation-control')
                implementation project(':sumatra-snapshot')
                implementation project(':sumatra-model')
                implementation project(':sumatra-skillsystem')
                implementation project(':moduli-ai')
                implementation project(':moduli-autoreferee')
                implementation project(':moduli-geometry')
                implementation project(':moduli-referee')
                implementation project(':moduli-wp')
                implementation project(':moduli-record')
                implementation project(':moduli-ai-controller')
                implementation project(':moduli-bot-params')
                runtimeOnly project(':moduli-botmanager-sim')

                implementation(libs.org.apache.logging.log4j.log4j.api)
                implementation(libs.org.apache.logging.log4j.log4j.core)

                implementation(platform(libs.org.junit.bom))
                implementation('org.junit.jupiter:junit-jupiter')
                runtimeOnly('org.junit.platform:junit-platform-launcher')
                implementation(libs.org.assertj.assertj.core)

                annotationProcessor(libs.org.projectlombok.lombok)
                implementation(libs.org.projectlombok.lombok)

                implementation(libs.org.openjdk.jmh.jmh.core)
                annotationProcessor(libs.org.openjdk.jmh.jmh.generator.annprocess)
            }

            targets {
                all {
                    testTask.configure {
                        maxHeapSize = "2g"
                        systemProperty("junit.jupiter.execution.timeout.threaddump.enabled", "true")
                        inputs.dir(file('config'))
                    }
                }
            }
        }
    }
}

tasks.register('runPathPlanningBenchmark', JavaExec) {
    group = "Execution"
    description = "Run PathPlanningPerfTest"
    classpath = sourceSets.integrationTest.runtimeClasspath
    mainClass.set("edu.tigers.sumatra.ai.integration.jmh.PathPlanningPerfTest")
    args("100")
}
